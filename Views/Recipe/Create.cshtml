@model Recipe

@{
    ViewData["Title"] = "Create";
}

<div class="container col-md-8 offset-md-2 mt-5">
    <h2 class="text-primary text-center">Create Recipe</h2>
    <form id="createForm" method="post" autocomplete="off">
        <div class="form-group mt-5">
            <input name="Title" class="form-control" placeholder="Title" required />
        </div>
        <div class="form-group mt-4">
            <div class="form-group">
                <div class="btn-group d-flex" role="group" aria-label="Basic radio toggle button group">
                    @{var isFirstChecked = false;}
                    @foreach (RecipeType type in Enum.GetValues(typeof(RecipeType)))
                    {
                        <input type="radio" class="btn-check" name="Type" id="@type" value="@((int)type)" @(isFirstChecked ? "" : "checked")>
                        <label class="btn btn-outline-primary w-100" for="@type">@type</label>
                        isFirstChecked = true;
                    }
                </div>
            </div>
        </div>
        <div class="form-group mt-4">
            <textarea name="Description" rows="4" class="form-control" placeholder="Description" required></textarea>
        </div>
        <div class="form-group mt-4">
            <label asp-for="ImageUrl" class="col-form-label-lg text-light p-0 py-1"></label>
            <input name="ImageUrl" class="form-control" placeholder="www.Example.com" required />
        </div>

        <div class="form-group mt-4">
            <label asp-for="Ingredients" class="col-form-label-lg text-light p-0"></label>
            <div id="ingredientList">
                <div id="ingredientRow" class="row">
                    <div class="form-text col-lg-7 col-5">
                        <input id="ingredientName" name="Ingredients[0].Name" class="form-control" placeholder="Name" required />
                    </div>
                    <div class="form-text col-lg-2 col-3">
                        <input id="ingredientAmount" name="Ingredients[0].Amount" type="number" step=".001" class="form-control" placeholder="0.00" required />
                    </div>
                    <div class="form-text col-lg-2 col-3">
                        <input id="ingredientUnit" name="Ingredients[0].Unit" class="form-control" placeholder="Unit" required />
                    </div>
                    <div class="col-1">
                        <div class="form-text d-flex justify-content-center">
                            <button id="removeIngredientBtn" type="button" class="btn btn-danger ingredientBtn" onclick="removeIngredient(this)" disabled>X</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="container mt-3">
            <div class="row">
                <div class="col text-center">
                    <button type="button" class="btn btn-primary fw-bold" style="width:100px" onclick="addIngredient()">ADD</button>
                </div>
            </div>
        </div>

        <div class="form-group mt-4">
            <label asp-for="Directions" class="col-form-label-lg text-light p-0"></label>
            <div id="directionList">
                <div id="directionRow" class="row">
                    <div class="form-text col-11">
                        <input name="Directions[0].DirectionText" class="form-control" placeholder="Step" required />
                    </div>
                    <div class="col-1">
                        <div class="form-text d-flex justify-content-center">
                            <button id="removeDirectionBtn" type="button" class="btn btn-danger directionBtn" onclick="removeDirection(this)" disabled>X</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="container mt-3">
            <div class="row">
                <div class="col text-center">
                    <button type="button" class="btn btn-primary fw-bold" style="width:100px" onclick="addDirection()">ADD</button>
                </div>
            </div>
        </div>

        <div class="form-group mt-4 text-center">
            <button id="btnSubmit" type="submit" class="btn btn-primary" style="width:150px">Create</button>
            <a asp-controller="Recipe" asp-action="Index" class="btn btn-secondary" style="width:150px">
                Back to list
            </a>
        </div>
    </form>
</div>

<script>
    var ingredientCount = 1;
    var ingredientVisible = 1;
    var directionCount = 1;
    var directionVisible = 1;

    function addIngredient() {
        //Clone row
        var clone = $('#ingredientRow').clone();
        clone.css('display', 'flex');

        //Change input names
        var inputs = clone.find('input');
        inputs[0].name = "Ingredients[" + ingredientCount + "].Name";
        inputs[0].value = "";
        inputs[1].name = "Ingredients[" + ingredientCount + "].Amount";
        inputs[1].value = "";
        inputs[2].name = "Ingredients[" + ingredientCount + "].Unit";
        inputs[2].value = "";

        //Append
        $("#ingredientList").append(clone);

        //Focus
        $("#ingredientRow #ingredientName").trigger("focus");

        //Enable delete buttons
        if (ingredientVisible == 1) {
            $('#ingredientList *').prop('disabled', false);
        }

        ingredientCount++;
        ingredientVisible++;
    }

    function removeIngredient(button) {
        //Hide row
        var row = button.closest('#ingredientRow');
        row.style.display = 'none';

        //Remove required and set val to null
        $(row).find(".form-control").each(function () {
            $(this).removeAttr("required");
            $(this).required = false;
            $(this).val(null);
        });

        ingredientVisible--;

        //Disable remove button if only 1 row
        if (ingredientVisible == 1) {
            $('.ingredientBtn').attr('disabled', true);
        }
    }

    function addDirection() {
        //Clone row and change name field
        var clone = $('#directionRow').clone();
        clone.css('display', 'flex');
        clone.find('input').each(function () {
            this.name = "Directions[" + directionCount + "].DirectionText";
            this.value = "";
        });

        //Append row
        $("#directionList").append(clone);

        //Focus
        $("#directionRow input").trigger("focus");

        //Enable the delete buttons
        if (directionVisible == 1) {
            $('#directionList *').prop('disabled', false);
        }
        directionCount++;
        directionVisible++;
    }

    function removeDirection(button) {
        //Hide row
        var row = button.closest('#directionRow');
        row.style.display = 'none';

        //Remove required and set val to null
        $input = $(row).find("input");
        $input.removeAttr("required");
        $input.required = false;
        $input.val(null);

        directionVisible--;

        //Disable remove button if only 1 row
        if (directionVisible == 1) {
            $('.directionBtn').attr('disabled', true);
        }
    }
</script>